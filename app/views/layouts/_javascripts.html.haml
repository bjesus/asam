-# Grab Google CDN's jQuery
-# Looks for google_api_key first in ENV['GOOGLE_API_KEY'] then in config/google.yml
- if !google_api_key.blank?
  = javascript_include_tag "//www.google.com/jsapi?key=#{google_api_key}"
  :javascript
    google.load("jquery", "1.4.4");
- else
  = javascript_include_tag "//ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js"

-# fall back to local jQuery if necessary
:javascript
  !window.jQuery && document.write(unescape('%3Cscript src="/javascripts/jquery-1.4.4.min.js"%3E%3C/script%3E'))
  
= javascript_include_tag 'rails', 'plugins', 'application'

/[if lt IE 7 ]
  :javascript
    $.getScript("/javascripts/dd_belatedpng.js",function(){ DD_belatedPNG.fix('img, .png_bg'); });
    
-#  Append your own using content_for :javascripts
= yield :javascripts

-# yui profiler and profileviewer
- if Rails.env == 'development'
  = javascript_include_tag 'profiling/yahoo-profiling.min', 'profiling/config'

-# asynchronous google analytics: mathiasbynens.be/notes/async-analytics-snippet
-# Looks for google_account_id first in ENV['GOOGLE_ACCOUNT_ID'] then in config/google.yml
- if !google_account_id.blank?
  :javascript
    var _gaq = [['_setAccount', '#{google_account_id}'], ['_trackPageview']];
    (function(d, t) {
     var g = d.createElement(t),
         s = d.getElementsByTagName(t)[0];
     g.async = true;
     g.src = ('https:' == location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
     s.parentNode.insertBefore(g, s);
    })(document, 'script');

= stylesheet_link_tag '/javascripts/plupload/examples/css/plupload.queue.css', :media => 'screen, projection'
%script{:type => "text/javascript",
  :src  => "/javascripts/plupload/js/gears_init.js"}
%script{:type => "text/javascript",
  :src  => "http://bp.yahooapis.com/2.4.21/browserplus-min.js"}
%script{:type => "text/javascript",
  :src  => "/javascripts/plupload/js/plupload.full.min.js"}
%script{:type => "text/javascript",
  :src  => "/javascripts/plupload/js/jquery.ui.plupload.min.js"}
%script{:type => "text/javascript",
        :src  => "/javascripts/textlist/GrowingInput.js"}
%script{:type => "text/javascript",
        :src  => "/javascripts/textlist/TextboxList.js"}
%script{:type => "text/javascript",
        :src  => "/javascripts/textlist/TextboxList.Autocomplete.js"}
%script{:type => "text/javascript",
        :src  => "/javascripts/shadowbox/shadowbox.js"}
:javascript
  Shadowbox.init();
  plupload.addI18n({
          'Select files' : 'בחר קבצים',
          'Add files to the upload queue and click the start button.' : 'הוסף קבצים והתחל את ההעלאה',
          'Filename' : 'שם קובץ',
          'Status' : 'מצב',
          'Size' : 'גודל',
          'Add Files' : 'הוסף קבצים',
          'Start Upload':'שלח קבצים',
          'Stop current upload' : 'עצור את תהליך השליחה',
          'Start uploading queue' : 'התחל את השליחה',
          'Drag files here.' : 'גרור קבצים לכאן'
  });
  // Convert divs to queue widgets when the DOM is ready
  $(function() {
    //RoR - capture authenticity token  
    var atoken = $("input[name=authenticity_token]").val();  
    $("#uploader").plupload({
      // General settings
      runtimes : 'html5,gears,silverlight,browserplus',
      url : '/images',
      unique_names : true,
      resize: false,
      max_file_size : '1000mb',
      //RoR - make sure form is multipart  
      multipart: true,
      //RoR - make sure to send authenticity token and any other parameters that are on the plain html form  
      multipart_params : {"image[text_id]" : "0", authenticity_token : atoken},  

      // Specify what files to browse for

      // Flash settings
      flash_swf_url : '/javascripts/plupload/js/plupload.flash.swf',

      // Silverlight settings
      silverlight_xap_url : '/javascripts/plupload/js/plupload.silverlight.xap'
    });

    // Client side form validation
    $('form').submit(function(e) {
      var uploader = $('#uploader').pluploadQueue();

      // Validate number of uploaded files
      if (uploader.total.uploaded == 0) {
        // Files in queue upload them first
        if (uploader.files.length > 0) {
          // When all files are uploaded submit form
          uploader.bind('UploadProgress', function() {
            if (uploader.total.uploaded == uploader.files.length)
              $('form').submit();
          });

          uploader.start();
        } else
          alert('You must at least upload one file.');

        e.preventDefault();
      }
    });
  });
  $(document).ready(function() {

    var t = new $.TextboxList('#text_tag_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=tag'}
    }}});

    var t1 = new $.TextboxList('#text_source_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=source'}
    }}});

    var t2 = new $.TextboxList('#text_kind_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=kind'}
    }}});

    var t3 = new $.TextboxList('#text_age_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=age'}
    }}});

    var t4 = new $.TextboxList('#text_author_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=author'}
    }}});

    var t5 = new $.TextboxList('#text_year_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=year'}
    }}});

    var t5 = new $.TextboxList('#text_maagal_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=maagal'}
    }}});

  });

