= stylesheet_link_tag '/javascripts/plupload/examples/css/plupload.queue.css', :media => 'screen, projection'
%script{:type => "text/javascript",
  :src  => "/javascripts/plupload/js/gears_init.js"}
%script{:type => "text/javascript",
  :src  => "http://bp.yahooapis.com/2.4.21/browserplus-min.js"}
%script{:type => "text/javascript",
  :src  => "/javascripts/plupload/js/plupload.full.min.js"}
%script{:type => "text/javascript",
  :src  => "/javascripts/plupload/js/jquery.ui.plupload.min.js"}
%script{:type => "text/javascript",
        :src  => "/javascripts/textlist/GrowingInput.js"}
%script{:type => "text/javascript",
        :src  => "/javascripts/textlist/TextboxList.js"}
%script{:type => "text/javascript",
        :src  => "/javascripts/textlist/TextboxList.Autocomplete.js"}
:javascript
  plupload.addI18n({
          'Select files' : 'בחר קבצים',
          'Add files to the upload queue and click the start button.' : 'הוסף קבצים והתחל את ההעלאה',
          'Filename' : 'שם קובץ',
          'Status' : 'מצב',
          'Size' : 'גודל',
          'Add Files' : 'הוסף קבצים',
          'Start Upload':'שלח קבצים',
          'Stop current upload' : 'עצור את תהליך השליחה',
          'Start uploading queue' : 'התחל את השליחה',
          'Drag files here.' : 'גרור קבצים לכאן'
  });
  // Convert divs to queue widgets when the DOM is ready
  $(function() {
    //RoR - capture authenticity token  
    var atoken = $("input[name=authenticity_token]").val();  
    $("#uploader").plupload({
      // General settings
      runtimes : 'html5,gears,flash,silverlight,browserplus',
      url : '/images',
      max_file_size : '10mb',
      chunk_size : '1mb',
      unique_names : true,
      //RoR - make sure form is multipart  
      multipart: true,
      //RoR - make sure to send authenticity token and any other parameters that are on the plain html form  
      multipart_params : {"image[text_id]" : "0", authenticity_token : atoken},  

      // Resize images on clientside if we can
      resize : {width : 320, height : 240, quality : 90},

      // Specify what files to browse for
      filters : [
        {title : "Image files", extensions : "jpg,gif,png"},
        {title : "Zip files", extensions : "zip"}
      ],

      // Flash settings
      flash_swf_url : '/javascripts/plupload/js/plupload.flash.swf',

      // Silverlight settings
      silverlight_xap_url : '/javascripts/plupload/js/plupload.silverlight.xap'
    });

    // Client side form validation
    $('form').submit(function(e) {
      var uploader = $('#uploader').pluploadQueue();

      // Validate number of uploaded files
      if (uploader.total.uploaded == 0) {
        // Files in queue upload them first
        if (uploader.files.length > 0) {
          // When all files are uploaded submit form
          uploader.bind('UploadProgress', function() {
            if (uploader.total.uploaded == uploader.files.length)
              $('form').submit();
          });

          uploader.start();
        } else
          alert('You must at least upload one file.');

        e.preventDefault();
      }
    });
  });
  $(document).ready(function() {

    var t = new $.TextboxList('#text_tag_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=tag'}
    }}});

    var t1 = new $.TextboxList('#text_source_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=source'}
    }}});

    var t2 = new $.TextboxList('#text_kind_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=kind'}
    }}});

    var t3 = new $.TextboxList('#text_age_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=age'}
    }}});

    var t4 = new $.TextboxList('#text_author_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=author'}
    }}});

    var t5 = new $.TextboxList('#text_year_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=year'}
    }}});

    var t5 = new $.TextboxList('#text_maagal_list', {unique: true, plugins: {autocomplete: {
    minLength: 1,
    queryRemote: true,
    remote: {url: '/tags_json?c=maagal'}
    }}});

  });


= form_for(@text) do |f|
  - if @text.errors.any?
    #error_explanation
      %h2
        = pluralize(@text.errors.count, "error")
        prohibited this text from being saved:
      %ul
        - @text.errors.full_messages.each do |msg|
          %li= msg
  .field
    = f.label :name
    %br/
    = f.text_field :name
  .field
    = f.label :user_id
    %br/
    = f.text_field :user_id
  .field
    #uploader no js support
    = f.label :content
    %br/
    = f.text_area :content
    %br/
    = f.label :tags
    = f.text_field :tag_list
    %br/
    = f.label :year
    = f.text_field :year_list
    %br/
    = f.label :author
    = f.text_field :author_list
    %br/
    = f.label :source
    = f.text_field :source_list
    %br/
    = f.label :kind
    = f.text_field :kind_list
    %br/
    = f.label :age
    = f.text_field :age_list
    %br/
    = f.label :maagal
    = f.text_field :maagal_list
  .actions
    = f.submit
